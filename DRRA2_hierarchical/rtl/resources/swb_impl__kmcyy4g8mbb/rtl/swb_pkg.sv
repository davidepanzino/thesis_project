// This file was automatically generated by Vesyla. DO NOT EDIT.

// vesyla_template_start package_head
package _kmcyy4g8mbb_pkg;
// vesyla_template_end package_head

  // vesyla_template_start package_macro
  parameter BULK_BITWIDTH = 256;
  parameter FSM_PER_SLOT = 4;
  parameter INSTR_OPCODE_BITWIDTH = 3;
  parameter NUM_SLOTS = 16;
  parameter RESOURCE_INSTR_WIDTH = 27;
  parameter WORD_BITWIDTH = 16;

  typedef struct packed {
      logic [1:0] _option;
      logic [3:0] _channel;
      logic [3:0] _source;
      logic [3:0] _target;
  } swb_t;

  function static swb_t unpack_swb;
      input logic [23:0] instr;
      swb_t _swb;
      _swb._option  = instr[23:22];
      _swb._channel  = instr[21:18];
      _swb._source  = instr[17:14];
      _swb._target  = instr[13:10];
      return _swb;
  endfunction

  function static logic [23:0] pack_swb;
      input swb_t _swb;
      logic [23:0] instr;

      instr[23:22] = _swb._option;
      instr[21:18] = _swb._channel;
      instr[17:14] = _swb._source;
      instr[13:10] = _swb._target;
      return instr;
  endfunction
  typedef struct packed {
      logic [1:0] _option;
      logic _sr;
      logic [3:0] _source;
      logic [15:0] _target;
  } route_t;

  function static route_t unpack_route;
      input logic [23:0] instr;
      route_t _route;
      _route._option  = instr[23:22];
      _route._sr = instr[21];
      _route._source  = instr[20:17];
      _route._target  = instr[16:1];
      return _route;
  endfunction

  function static logic [23:0] pack_route;
      input route_t _route;
      logic [23:0] instr;

      instr[23:22] = _route._option;
      instr[21] = _route._sr;
      instr[20:17] = _route._source;
      instr[16:1] = _route._target;
      return instr;
  endfunction
  typedef struct packed {
      logic [1:0] _port;
      logic [3:0] _level;
      logic [5:0] _iter;
      logic [5:0] _step;
      logic [5:0] _delay;
  } rep_t;

  function static rep_t unpack_rep;
      input logic [23:0] instr;
      rep_t _rep;
      _rep._port  = instr[23:22];
      _rep._level  = instr[21:18];
      _rep._iter  = instr[17:12];
      _rep._step  = instr[11:6];
      _rep._delay  = instr[5:0];
      return _rep;
  endfunction

  function static logic [23:0] pack_rep;
      input rep_t _rep;
      logic [23:0] instr;

      instr[23:22] = _rep._port;
      instr[21:18] = _rep._level;
      instr[17:12] = _rep._iter;
      instr[11:6] = _rep._step;
      instr[5:0] = _rep._delay;
      return instr;
  endfunction
  typedef struct packed {
      logic [1:0] _port;
      logic [3:0] _level;
      logic [5:0] _iter;
      logic [5:0] _step;
      logic [5:0] _delay;
  } repx_t;

  function static repx_t unpack_repx;
      input logic [23:0] instr;
      repx_t _repx;
      _repx._port  = instr[23:22];
      _repx._level  = instr[21:18];
      _repx._iter  = instr[17:12];
      _repx._step  = instr[11:6];
      _repx._delay  = instr[5:0];
      return _repx;
  endfunction

  function static logic [23:0] pack_repx;
      input repx_t _repx;
      logic [23:0] instr;

      instr[23:22] = _repx._port;
      instr[21:18] = _repx._level;
      instr[17:12] = _repx._iter;
      instr[11:6] = _repx._step;
      instr[5:0] = _repx._delay;
      return instr;
  endfunction
  typedef struct packed {
      logic [1:0] _port;
      logic [6:0] _delay_0;
      logic [6:0] _delay_1;
      logic [6:0] _delay_2;
  } fsm_t;

  function static fsm_t unpack_fsm;
      input logic [23:0] instr;
      fsm_t _fsm;
      _fsm._port  = instr[23:22];
      _fsm._delay_0  = instr[21:15];
      _fsm._delay_1  = instr[14:8];
      _fsm._delay_2  = instr[7:1];
      return _fsm;
  endfunction

  function static logic [23:0] pack_fsm;
      input fsm_t _fsm;
      logic [23:0] instr;

      instr[23:22] = _fsm._port;
      instr[21:15] = _fsm._delay_0;
      instr[14:8] = _fsm._delay_1;
      instr[7:1] = _fsm._delay_2;
      return instr;
  endfunction
  // vesyla_template_end package_macro

  parameter OPCODE_SWB = 3'b100;
  parameter OPCODE_ROUTE = 3'b101;
  parameter NUM_OPTIONS = 4;

endpackage
